// <auto-generated />
using CityInformation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace cityInfortmation.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220810174847_newDb")]
    partial class newDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CityInformation.Models.Entities.Authorized", b =>
                {
                    b.Property<int>("authorizedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Roles")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("authorizedPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("authorizedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("authorizedId");

                    b.ToTable("Authorized");
                });

            modelBuilder.Entity("CityInformation.Models.Entities.CityProp", b =>
                {
                    b.Property<int>("cityCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cityAfadPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityAfadUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityEmniyetPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityEmniyetUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityItfaiyePin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityItfaiyeUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityJandarmaPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityJandarmaUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityOrmanPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cityOrmanUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citySGuvenlikPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citySGuvenlikUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citySaglikPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citySaglikUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flet_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cityCodeId");

                    b.ToTable("cityInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
